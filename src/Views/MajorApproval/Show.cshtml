
@model HACCPExtender.Models.Bussiness.BMajorApproval
@using HACCPExtender.Constants

@Styles.Render("~/Content/css/style.css")
@Styles.Render("~/Content/css/majorApproval.css")
@Scripts.Render("~/Scripts/js/common.js")

<script type="text/javascript">
    $(function () {
    })
    function ChangeCategory(val) {
        $('form').attr('action', '@Url.Content("~/MajorApproval/ChangeCondition")');
        $('form').submit();
    }
    function ChangePeriod(val) {
        $('.period').css('display', 'none');

        var day = $('#PeriodDay').val();
        if (val == '' || day == '') {
            $('.result').css('display', 'none');
        } else {
            $('form').attr('action', '@Url.Content("~/MajorApproval/ChangeDetermineConditions")');
            $('form').submit();
        }
    }
    function ChangePeriodDay(val) {
        $('.period').css('display', 'none');

        if (val == '') {
            $('.result').css('display', 'none');
        } else {
            if (!isDate(val)) {
                alert('YYYY-MM-DDの形式で入力してください。');
                return false;
            }

            if (val.match(/^\d{4}\/\d{2}\/\d{2}$/)) {
                var datestr = val.replace(/\//g, '');
                $('#PeriodYMD').val(datestr);
            }
            if (val.match(/^\d{4}-\d{2}-\d{2}$/)) {
                var datestr = val.replace(/-/g, '');
                $('#PeriodYMD').val(datestr);
            }

            $('form').attr('action', '@Url.Content("~/MajorApproval/ChangeDetermineConditions")');
            $('form').submit();
        }
    }
    function registApproval() {
        if (!confirm("承認を実行します。よろしいですか？")) {
            return false;
        }
        $('#ShoriMode').val('1');
        $('form').attr('action', '@Url.Content("~/MajorApproval/RegistApproval")');
        $('form').submit();
    }
    function remandApproval() {
        if (!confirm("差戻を実行します。よろしいですか？")) {
            return false;
        }
        $('#ShoriMode').val('2');
        $('form').attr('action', '@Url.Content("~/MajorApproval/RegistApproval")');
        $('form').submit();
    }
    function data_detail(locationId, reportId) {
        $('#SelLocationId').val(locationId);
        $('#SelReportId').val(reportId);
        $('form').attr('action', '@Url.Content("~/MajorApproval/ShowDataDetail")');
        $('form').submit();
    }
    function requestFacility() {
        if (!confirm("承認依頼を実行します。よろしいですか？")) {
            return false;
        }
        $('form').attr('action', '@Url.Content("~/MajorApproval/RequestFacilityApproval")');
        $('form').submit();
    }
</script>


<h1 class="page-title">データ承認（大分類承認）</h1>
@using (Html.BeginForm("Edit", "MajorApproval", new { }, FormMethod.Post, new { }))
{
    @Html.AntiForgeryToken()
    <section id="">
        @Html.ValidationSummary()
        @{
            var disp = "none";
            if (!string.IsNullOrEmpty(ViewBag.registMsg))
            {
                disp = "block";
            }
        }
        <div id="message-area" style="display: @disp">
            <div class="regist-message" style="display: @disp">@Html.Raw(Html.Encode(ViewBag.registMsg).Replace("\n", "<br />"))</div>
        </div>
        <div class="category">
            <ul>
                <li><span class="midashi">大分類</span></li>
                <li>@Html.DropDownListFor(model => model.CategoryId, (IEnumerable<SelectListItem>)Model.CategoryDrop, "選択してください", new { @class = "selectType1 input-area1", @onchange = "ChangeCategory(this.value)" })</li>
            </ul>
        </div>
        <div class="category subarea">
            <ul>
                <li><span class="midashi">周期　</span></li>
                <li>@Html.DropDownListFor(model => model.Period, (IEnumerable<SelectListItem>)Model.PeriodDrop, "選択してください", new { @class = "selectType1 input-area1", @onchange = "ChangePeriod(this.value)" })</li>
            </ul>
        </div>

        <dev class="category" id="recorddate-area">
            <ul>
                <li><input type="date" id="PeriodDay" name="PeriodDay" value="@Model.PeriodDay" class="hiduke" Onchange="ChangePeriodDay(this.value)" min="1900-01-01" max="2100-12-31"></li>
            </ul>
            @Html.Hidden("PeriodYMD", Model.PeriodYMD)
            @Html.Hidden("SelLocationId", string.Empty)
            @Html.Hidden("SelReportId", string.Empty)
        </dev>

        <div class="result">
            @if (Model.MajorDatas != null && Model.MajorDatas.Count() > 0)
            {
                <section id="major-btnarea">
                    @if (Model.ApprovalBtn)
                    {
                        <button type="button" name="regist" class="btn-register majorSnn" onClick="registApproval()">承認</button>
                    }
                    else
                    {
                        <button type="button" name="regist" class="btn-register majorSnn" disabled>承認</button>
                    }
                    @if (Model.RemandBtn)
                    {
                        <button type="button" name="sendback" class="btn-sendback" onClick="remandApproval()">差戻</button>
                    }
                    else
                    {
                        <button type="button" name="sendback" class="btn-sendback" disabled>差戻</button>
                    }
                @Html.Hidden("ShoriMode", string.Empty)
                @Html.Hidden("ApprobalBtn", Model.ApprovalBtn)
                @Html.Hidden("RemandBtn", Model.RemandBtn)
                @Html.Hidden("RequestBtn", Model.RequestBtn)
                </section>
                <table id="tbl1" class="header_title">
                    <thead>
                        <tr class="datarow">
                            <th class="th-1">選択</th>
                            <th class="th-2">ステータス</th>
                            <th class="th-3">中分類</th>
                            <th class="th-4">帳票名</th>
                            <th class="th-5">承認・差戻コメント<br>（大分類承認）</th>
                            <th class="th-9">データ記録範囲</th>
                            <th class="th-6">大分類承認依頼<br>作業者</th>
                            <th class="th-7">大分類承認依頼コメント</th>
                            <th class="th-8">データ詳細</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < Model.MajorDatas.Count; i++)
                        {
                            var key = String.Format("list[{0}].", i);
                            var item = Model.MajorDatas[i];
                            @Html.Hidden(key + "UPDDATE", item.UPDDATE)
                            @Html.Hidden(key + "STATUS", item.STATUS)
                            @Html.Hidden(key + "LOCATIONID", item.LOCATIONID)
                            @Html.Hidden(key + "REPORTID", item.REPORTID)
                            @Html.Hidden(key + "LOCATIONNAME", item.LOCATIONNAME)
                            @Html.Hidden(key + "REPORTNAME", item.REPORTNAME)
                            @Html.Hidden(key + "MAJORSNNUSERNAME", item.MAJORSNNUSERNAME)
                            @Html.Hidden(key + "MAJORREQCOMMENT", item.MAJORREQCOMMENT)
                            @Html.Hidden(key + "MAJORREQWORKERNAME", @item.MAJORREQWORKERNAME)
                            @Html.Hidden(key + "PERIODSTART", item.PERIODSTART)
                            @Html.Hidden(key + "PERIODSTARTDATE", item.PERIODSTARTDATE)
                            @Html.Hidden(key + "PERIODEND", item.PERIODEND)
                            @Html.Hidden(key + "PERIODENDDATE", item.PERIODENDDATE)
                            @Html.Hidden(key + "STAMPFIELD", item.STAMPFIELD)
                            @Html.Hidden(key + "FacilityStatus", item.FacilityStatus)
                            @Html.Hidden(key + "FacilityUpddate", item.FacilityUpddate)
                            @Html.Hidden(key + "ApprovalFlg", item.ApprovalFlg)
                            @Html.Hidden(key + "RemandFlg", item.RemandFlg)
                            <tr class="datarow">
                                <td class="td-1 chk">
                                    @if (item.ApprovalFlg || item.RemandFlg)
                                    {
                                        @Html.CheckBox(key + "DataChk", item.DataChk)
                                    } else
                                    {
                                        @Html.CheckBox(key + "DataChk", item.DataChk, new { @disabled = "disabled" })
                                    }
                                </td>
                                @if (Const.ApprovalStatus.PENDING.Equals(item.STATUS))
                                {
                                    <td class="td-2">承認待ち</td>
                                }
                                else if (Const.ApprovalStatus.APPROVAL.Equals(item.STATUS))
                                {
                                    <td class="td-2">承認済</td>
                                }
                                else
                                {
                                    <td class="td-2">差戻</td>
                                }
                                <td class="td-3">@item.LOCATIONNAME</td>
                                <td class="td-4">@item.REPORTNAME</td>
                                @if (item.ApprovalFlg || item.RemandFlg)
                                {
                                    <td class="td-5 inp-txt">@Html.TextBox(key + "MAJORSNNCOMMENT", item.MAJORSNNCOMMENT, new { @class = "table-txt" })</td>
                                } else
                                {
                                    <td class="td-5 inp-txt">@Html.TextBox(key + "MAJORSNNCOMMENT", item.MAJORSNNCOMMENT, new { @class = "table-txt", @disabled = "disabled" })</td>
                                    @Html.Hidden(key + "MAJORSNNCOMMENT", item.MAJORSNNCOMMENT)
                                }
                                <td class="td-9">@item.PERIODSTARTDATE ～ @item.PERIODENDDATE</td>
                                <td class="td-6">@item.MAJORREQWORKERNAME</td>
                                <td class="td-7">@item.MAJORREQCOMMENT</td>
                                <td class="td-8 chk"><a href="javascript:data_detail('@item.LOCATIONID', '@item.REPORTID')" class="detail">データ詳細</a></td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="category facilityapp-area">
                    <ul>
                        @if (Model.RequestBtn)
                        {
                            <li class="bottom">@Html.TextBox("RequestComment", Model.RequestComment, new { @class = "snnRequest", placeholder = "施設承認依頼コメント" })</li>
                            <li><button type="button" name="regist" class="btn-request" onclick="requestFacility()">施設承認依頼</button></li>
                        }
                        else
                        {
                            <li class="bottom">@Html.TextBox("RequestComment", Model.RequestComment, new { @class = "snnRequest", placeholder = "施設承認依頼コメント", disabled = "disabled" })</li>
                            <li><button type="button" name="regist" class="btn-request" disabled>施設承認依頼</button></li>
                        }
                    </ul>
                </div>
                <div class="rireki-title">承認履歴（施設承認）</div>
                <table id="tbl2">
                    <thead>
                        <tr>
                            <th class="th-1">データ記録範囲</th>
                            <th class="th-2">処理日時</th>
                            <th class="th-3">コメント</th>
                            <th class="th-4">ステータス</th>
                            <th class="th-5">承認者</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < Model.Historys.Count; i++)
                        {
                            var key = String.Format("list[{0}].", i);
                            var item = Model.Historys[i];
                            <tr>
                                <td class="td-1">@item.PERIODSTART ～ @item.PERIODEND</td>
                                <td class="td-2">@item.APPROVALDATE</td>
                                <td class="td-3">@item.APPROVALCOMMENT</td>
                                @if (Const.ApprovalStatus.PENDING.Equals(item.STATUS))
                                {
                                    <td class="td-4">承認待ち</td>
                                }
                                else if (Const.ApprovalStatus.APPROVAL.Equals(item.STATUS))
                                {
                                    <td class="td-4">承認済</td>
                                }
                                else
                                {
                                    <td class="td-4">差戻</td>
                                }
                                <td class="td-5">@item.APPROVALUSERNAME</td>
                            </tr>
                        }
                        @if (Model.Historys.Count() == 0)
                        {
                            <tr>
                                <td class="td-1" colspan="5">データがありません</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="nodata">@ViewBag.noDateMsg</div>
            }
        </div>
    </section>
}
